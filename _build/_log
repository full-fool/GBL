### Starting build.
# Target: microc.ml.depends, tags: { extension:ml, file:microc.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules microc.ml > microc.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules ast.ml > ast.ml.depends
# Target: codegen.ml.depends, tags: { extension:ml, file:codegen.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules codegen.ml > codegen.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmo ast.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o ast.cmo ast.ml
File "ast.ml", line 83, characters 25-504:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(ArrayElement (_, _)|ArrayElementAssign (_, _, _))
File "ast.ml", line 98, characters 25-697:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Init (_, _, _)|Bind _|ArrayBind _)
# Target: parser.mly, tags: { extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, package(llvm), package(llvm.analysis), parser, quiet }
/usr/local/bin/ocamlyacc parser.mly
+ /usr/local/bin/ocamlyacc parser.mly
1 rule never reduced
102 shift/reduce conflicts.
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules parser.mli > parser.mli.depends # cached
# Target: scanner.mll, tags: { extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, package(llvm), package(llvm.analysis), quiet }
/usr/local/bin/ocamllex.opt -q scanner.mll # cached
# Target: scanner.ml.depends, tags: { extension:ml, file:scanner.ml, ocaml, ocamldep, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamldep -package llvm.analysis -package llvm -modules scanner.ml > scanner.ml.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o parser.cmi parser.mli
# Target: codegen.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:codegen.cmo, file:codegen.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o codegen.cmo codegen.ml
File "codegen.ml", line 28, characters 21-157:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(IntArray|BoolArray|FloatArray|StringArray|Game|Player|Sprite|Map)
File "codegen.ml", line 100, characters 7-516:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Mod|AddEqual|SubEqual|MultEqual|DivEqual|ModEqual|At)
File "codegen.ml", line 90, characters 27-1727:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(ArrayElement (_, _)|ArrayElementAssign (_, _, _))
File "codegen.ml", line 140, characters 27-1560:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
(Break|Continue|Init (_, _, _)|Bind _|ArrayBind _)
File "codegen.ml", line 44, characters 6-17:
Warning 26: unused variable printf_func.
File "codegen.ml", line 64, characters 8-22:
Warning 26: unused variable int_format_str.
File "codegen.ml", line 75, characters 10-19:
Warning 26: unused variable add_local.
# Target: scanner.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmo scanner.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o scanner.cmo scanner.ml
File "scanner.mll", line 75, characters 9-12:
Warning 26: unused variable lxm.
# Target: microc.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:microc.cmo, file:microc.ml, implem, ocaml, package(llvm), package(llvm.analysis), quiet }
ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o microc.cmo microc.ml
+ ocamlfind ocamlc -c -w +a-4 -package llvm.analysis -package llvm -o microc.cmo microc.ml
File "microc.ml", line 16, characters 47-50:
Error: This expression has type Ast.program
       but an expression was expected of type
         (Ast.typ * string) list * Ast.func_decl list
Command exited with code 2.
# Compilation unsuccessful.
